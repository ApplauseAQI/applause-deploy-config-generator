---
kube_deployments:
  - metadata:
      name: nginx-deployment
      namespace: nginx
      labels:
        app: nginx
    spec:
      replicas: 3
      selector:
        match_labels:
          app: nginx
      template:
        metadata:
          labels:
            app: nginx
        spec:
          containers:
          - name: nginx
            image: nginx:1.7.9
            ports:
            - container_port: 80
kube_services:
  - metadata:
      name: nginx-service
      namespace: nginx
      labels:
        app: nginx
    spec:
      selector:
        app: nginx
      ports:
        - name: http
          protocol: TCP
          port: 80
          target_port: 80
kube_namespaces:
  - metadata:
      name: nginx
kube_pdbs:
  - metadata:
      name: nginx
    spec:
      max_unavailable: 1
      min_available: 2
      selector:
        match_labels:
          app: nginx
kube_secrets:
  - metadata:
      name: nginx-secrets
    type: Opaque
    data:
      key1: some value
      key2: another value
kube_jobs:
  - metadata:
      name: job1
    spec:
      template:
        spec:
          containers:
          - name: hello
            image: busybox
            args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
          restart_policy: OnFailure
kube_cronjobs:
  - metadata:
      name: cronjob1
    spec:
      schedule: '*/5 * * * *'
      job_template:
        spec:
          template:
            spec:
              containers:
              - name: hello
                image: busybox
                args:
                - /bin/sh
                - -c
                - date; echo Hello from the Kubernetes cluster
              restart_policy: OnFailure
kube_statefulsets:
  - metadata:
      name: web
    spec:
      selector:
        match_labels:
          app: nginx
      service_name: "nginx"
      replicas: 3
      template:
        metadata:
          labels:
            app: nginx
        spec:
          termination_grace_period_seconds: 10
          containers:
          - name: nginx
            image: k8s.gcr.io/nginx-slim:0.8
            ports:
            - container_port: 80
              name: web
            volume_mounts:
            - name: www
              mount_path: /usr/share/nginx/html
      volume_claim_templates:
      - metadata:
          name: www
        spec:
          access_modes: [ "ReadWriteOnce" ]
          storage_class_name: "my-storage-class"
          resources:
            requests:
              storage: 1Gi
kube_ingresses:
  - metadata:
      name: test-ingress
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
    spec:
      rules:
      - http:
          paths:
          - path: /testpath
            backend:
              service_name: test
              service_port: 80
kube_pvcs:
  - metadata:
      name: test-pvc
    spec:
      access_modes:
        - ReadWriteOnce
      volume_mode: Filesystem
      resources:
        requests:
          storage: 8Gi
      storage_class_name: slow
      selector:
        match_labels:
          release: "stable"
        match_expressions:
          - {key: environment, operator: In, values: [dev]}
kube_configmaps:
  - metadata:
      name: test-configmap
    data:
      foo: bar
      some.file: |
        test1
        test2
        test3
